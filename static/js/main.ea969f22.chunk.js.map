{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","query","onChangeQuery","error","onSubmit","onAddMovie","isLoader","event","htmlFor","type","id","placeholder","value","onChange","target","disabled","length","classNames","onClick","getMovie","fetch","then","res","json","catch","Response","Error","App","useState","setMovies","setMovie","setQuery","setError","loader","setLoader","getMovieFromServer","text","a","isMovie","Title","Plot","Poster","imdbID","preventDefault","movieToAdd","find","mov","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea969f22.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ninterface Props {\n  query: string,\n  onChangeQuery: (text: string) => void,\n  movie: Movie | null,\n  error: boolean,\n  onSubmit: (event: React.FormEvent<HTMLFormElement>, text: string) => void;\n  onAddMovie: (movieToAdd: Movie) => void,\n  isLoader: boolean,\n}\n\nexport const FindMovie: React.FC<Props> = ({\n  query,\n  onChangeQuery,\n  movie,\n  error,\n  onSubmit,\n  onAddMovie,\n  isLoader,\n}) => {\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => onSubmit(event, query)}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={event => onChangeQuery(event.target.value)}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              disabled={!query.length}\n              className={classNames('button is-light', {\n                'is-loading': isLoader,\n              })}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie !== null && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAddMovie(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=42bdfd43';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport { getMovie } from './api';\nimport { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [loader, setLoader] = useState(false);\n\n  const changeQuery = (text: string) => {\n    setError(false);\n    setQuery(text);\n  };\n\n  function instanceOfMovie(data: MovieData | ResponseError):\n    data is MovieData {\n    return 'imdbID' in data;\n  }\n\n  const getMovieFromServer = async (text: string) => {\n    setLoader(true);\n\n    try {\n      const isMovie = await getMovie(text);\n\n      if (instanceOfMovie(isMovie)) {\n        setMovie({\n          title: isMovie.Title,\n          description: isMovie.Plot,\n          imgUrl: isMovie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : isMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${isMovie.imdbID}`,\n          imdbId: isMovie.imdbID,\n        });\n      } else {\n        setError(true);\n      }\n    } finally {\n      setLoader(false);\n    }\n  };\n\n  const submitForm = (\n    event: React.FormEvent<HTMLFormElement>,\n    text: string,\n  ) => {\n    event.preventDefault();\n\n    getMovieFromServer(text);\n  };\n\n  const addMovie = (movieToAdd: Movie) => {\n    if (!movies.find(mov => mov.imdbId === movieToAdd.imdbId)) {\n      setMovies(prevMovies => [...prevMovies, movieToAdd]);\n    }\n\n    setQuery('');\n    setMovie(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          query={query}\n          onChangeQuery={changeQuery}\n          movie={movie}\n          error={error}\n          onSubmit={submitForm}\n          onAddMovie={addMovie}\n          isLoader={loader}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}